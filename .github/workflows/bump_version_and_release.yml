name: Release - Bump and Release 🚀
on: [workflow_dispatch]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    name: Create and publish release
    runs-on: ubuntu-latest

    steps:
      - name: ⤵️　Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ github.ref }}

      - name: 🗑　Delete drafts
        uses: hugo19941994/delete-draft-releases@v2.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔢 Calculate next semantic version
        id: semver
        uses: ietf-tools/semver-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: main

      - name: 🧾 Display version info
        run: |
          echo "Current version: ${{ steps.semver.outputs.current }}"
          echo "Next version: ${{ steps.semver.outputs.next }}"

      - name: 🔄　Update version in 'VERSION' and 'manifest.json' and push changes
        env:
          tag_name: ${{ steps.semver.outputs.next }}
          GITHUB_REPO: ${{ github.event.repository.name }}
        run: |
          echo "** Manifest before replace **"
          cat custom_components/$GITHUB_REPO/manifest.json
          sed -i 's/"version": ".*"/"version": "'$tag_name'"/g' custom_components/$GITHUB_REPO/manifest.json
          echo "** Manifest after replace **"
          cat custom_components/$GITHUB_REPO/manifest.json
          echo $tag_name > VERSION

      - name: 📝　Publish release
        uses: release-drafter/release-drafter@v6
        id: release_published
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Release ${{ steps.semver.outputs.next }}
          tag: ${{ steps.semver.outputs.next }}
          publish: true

      - name: "✏️　Generate release changelog"
        uses: janheinrichmerker/action-github-changelog-generator@v2.4
        with:
          token: ${{ secrets.GH_PAT }}
          output: CHANGELOG.md
          issues: true
          issuesWoLabels: true
          pullRequests: true
          prWoLabels: true
          unreleased: false
          addSections: '{"documentation":{"prefix":"**Documentation:**","labels":["documentation"]}}'

      - name: ✅　Commit release notes and bump version
        uses: EndBug/add-and-commit@v9
        with:
          add: "VERSION CHANGELOG.md custom_components/${{ github.event.repository.name }}/manifest.json"
          message: "chore(release): changelog & bump version to ${{ steps.semver.outputs.next }}"
          push: true

      - name: 📦 Create zip file
        run: |
          cd custom_components/${{ github.event.repository.name }}
          zip -r "${{ github.event.repository.name }}.zip" .
          mv "${{ github.event.repository.name }}.zip" ../..

      - name: 📎 Upload zip to release
        run: |
          gh release upload "${{ steps.semver.outputs.next }}" "${{ github.event.repository.name }}.zip"
        env:
          GH_TOKEN: ${{ secrets.GH_PAT || secrets.GITHUB_TOKEN }}

      - name: 🚮 Remove pre-releases
        run: |
          gh release list --json tagName,isPrerelease -q '.[] | select(.isPrerelease == true) | .tagName' | while read -r tag_name; do
            echo "Deleting pre-release with tag: $tag_name"
            # Delete the release
            gh release delete "$tag_name" --yes
            # Delete the Git tag
            echo "Deleting Git tag: $tag_name"
            git push origin --delete "$tag_name" || echo "Failed to delete tag $tag_name from remote"
            git tag -d "$tag_name" || echo "Failed to delete tag $tag_name locally"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🚀 Send Discord notification
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: "🎉 New release published: https://github.com/${{ github.repository }}/releases/tag/${{ steps.semver.outputs.next }}"
