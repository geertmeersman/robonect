name: Pre-Release
on:
  workflow_dispatch:
    inputs:
      version:
        type: choice
        description: Version bump
        options:
          - major
          - minor
          - patch

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  determine_next_version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js 10
        uses: actions/setup-node@v2
        with:
          node-version: "10"

      - name: Determine Next Version
        id: next_version
        run: |
          echo '{
            "name": "Next version",
            "version": "1.0.0",
            "dependencies": {
              "conventional-recommended-bump": "^8.1.0"
            }
          }' > package.json

      - name: Install dependencies
        run: npm ci

      - name: Determine Next Version
        id: next_version
        run: |
          # Switch to the specific branch
          git checkout dev-current

          # Execute the conventional-commits tool to determine the next version
          NEXT_VERSION=$(npx conventional-recommended-bump)

          # Extract the recommended bump from the output
          NEXT_VERSION=$(echo $NEXT_VERSION | awk '{print $2}')

          # Set the output for the next version
          echo "::set-output name=next_version::$NEXT_VERSION"

      - name: Use Next Version
        run: |
          NEXT_VERSION=${{ steps.next_version.outputs.next_version }}
          echo "Next version: $NEXT_VERSION"

  create_beta_release:
    name: Create a BETA release from dev-current
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: ⤵️　Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Set up Node.js 10
        uses: actions/setup-node@v2
        with:
          node-version: 10

      - name: Determine next version
        id: next-version
        run: |
          # Execute the detect-next-version script with Node.js 10
          NEXT_VERSION=$(node -e "const detectNextVersion = require('detect-next-version'); console.log(detectNextVersion())")
          # Fetch the commit messages since the last tag
          git fetch --tags
          last_tag=$(git describe --tags --abbrev=0 origin/main)
          commit_messages=$(git log --pretty=format:%s $last_tag..${{ github.ref }})

          # Use a script to determine the next version based on semantic naming
          next_version=$(node determine-next-version.js "$commit_messages")

          echo "::set-output name=version::$next_version"

      - name: 🗑　Delete drafts
        uses: hugo19941994/delete-draft-releases@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔄　Update version in 'VERSION' and 'manifest.json' and push changes
        env:
          tag_name: v${{ steps.next-version.outputs.version }}-beta
          GITHUB_REPO: ${{ github.event.repository.name }}
          github_ref: ${{ github.ref }}
        run: |
          echo "** Manifest before replace **"
          cat custom_components/$GITHUB_REPO/manifest.json
          sed -i 's/"version": ".*"/"version": "'$tag_name'"/g' custom_components/$GITHUB_REPO/manifest.json
          echo "** Manifest after replace **"
          cat custom_components/$GITHUB_REPO/manifest.json
          echo $tag_name > VERSION

      - name: 🚀　Add and commit changes
        uses: EndBug/add-and-commit@v9
        with:
          message: Bump version

      - name: 📝　Publish release
        uses: release-drafter/release-drafter@v5
        id: release_published
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          config-name: release-drafter-beta.yml
          prerelease: true
          publish: true
          commitish: ${{ github.ref }}
          tag: v${{ steps.next-version.outputs.version }}-beta
          name: Release v${{ steps.next-version.outputs.version }}-beta
